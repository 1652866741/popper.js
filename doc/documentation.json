{
    "classes": [
        {
            "name": "Popper",
            "description": "",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Popper",
                "description": "Create a new Popper.js instance",
                "parameters": [
                    {
                        "name": "reference",
                        "type": [
                            "HTMLElement"
                        ],
                        "description": "The reference element used to position the popper",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "popper",
                        "type": [
                            "HTMLElement"
                        ],
                        "description": "The HTML element used as popper.",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "options",
                        "type": [
                            "Object"
                        ],
                        "description": "",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "options.placement",
                        "type": [
                            "String"
                        ],
                        "description": "Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -right),\n     left(-start, -end)`",
                        "default": "bottom",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.gpuAcceleration",
                        "type": [
                            "Boolean"
                        ],
                        "description": "When this property is set to true, the popper position will be applied using CSS3 translate3d, allowing the\n     browser to use the GPU to accelerate the rendering.\n     If set to false, the popper will be placed using `top` and `left` properties, not using the GPU.",
                        "default": "true",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.boundariesElement",
                        "type": [
                            "String",
                            "Element"
                        ],
                        "description": "The element which will define the boundaries of the popper position, the popper will never be placed outside\n     of the defined boundaries (except if `keepTogether` is enabled)",
                        "default": "'viewport'",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.boundariesPadding",
                        "type": [
                            "Number"
                        ],
                        "description": "Additional padding for the boundaries",
                        "default": "5",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.modifiers",
                        "type": [
                            "Object"
                        ],
                        "description": "Default modifiers",
                        "default": "DEFAULTS.modifiers",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.arrowElement",
                        "type": [
                            "HTMLElement",
                            "String"
                        ],
                        "description": "The DOM Node used as arrow for the popper, or a CSS selector used to get the DOM node. It must be child of\n     its parent Popper. Popper.js will apply to the given element the style required to align the arrow with its\n     reference element.\n     By default, it will look for a child node of the popper with the `x-arrow` attribute.",
                        "default": "'[x-arrow]'",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.modifiers.offset.offset",
                        "type": [
                            "Number"
                        ],
                        "description": "Amount of pixels the popper will be shifted (can be negative).",
                        "default": "0",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.preventOverflowOrder",
                        "type": [
                            "Array"
                        ],
                        "description": "Order used when Popper.js tries to avoid overflows from the boundaries, they will be checked in order,\n     this means that the last ones will never overflow",
                        "default": "['left', 'right', 'top', 'bottom']",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.flipBehavior",
                        "type": [
                            "String",
                            "Array"
                        ],
                        "description": "The behavior used by the `flip` modifier to change the placement of the popper when the latter is trying to\n     overlap its reference element. Defining `flip` as value, the placement will be flipped on\n     its axis (`right - left`, `top - bottom`).\n     You can even pass an array of placements (eg: `['right', 'left', 'top']` ) to manually specify\n     how alter the placement when a flip is needed. (eg. in the above example, it would first flip from right to left,\n     then, if even in its new placement, the popper is overlapping its reference element, it will be moved to top)",
                        "default": "'flip'",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.modifiers",
                        "type": [
                            "Object"
                        ],
                        "description": "List of functions used to modify the data before they are applied to the popper.",
                        "default": "{ foobar: { order: 100, enabled: true, function: fn, onLoad: fn }, ... }",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.removeOnDestroy",
                        "type": [
                            "Boolean"
                        ],
                        "description": "Set to true if you want to automatically remove the popper when you call the `destroy` method.",
                        "default": "false",
                        "optional": true,
                        "nullable": ""
                    }
                ],
                "examples": []
            },
            "functions": [
                {
                    "name": "update",
                    "access": "",
                    "virtual": false,
                    "description": "Updates the position of the popper, computing the new offsets and applying the new style",
                    "parameters": [
                        {
                            "name": "isFirstCall",
                            "type": [
                                "Boolean"
                            ],
                            "description": "When true, the onCreate callback is called, otherwise it calls the onUpdate callback",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "onCreate",
                    "access": "",
                    "virtual": false,
                    "description": "If a function is passed, it will be executed after the initialization of popper with as first argument the Popper instance.",
                    "parameters": [
                        {
                            "name": "callback",
                            "type": [
                                "function"
                            ],
                            "description": "",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "onUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "If a function is passed, it will be executed after each update of popper with as first argument the set of coordinates and informations\nused to style popper and its arrow.\nNOTE: it doesn't get fired on the first call of the `Popper.update()` method inside the `Popper` constructor!",
                    "parameters": [
                        {
                            "name": "callback",
                            "type": [
                                "function"
                            ],
                            "description": "",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "destroy",
                    "access": "",
                    "virtual": false,
                    "description": "Destroy the popper",
                    "parameters": [],
                    "examples": []
                }
            ]
        }
    ]
}