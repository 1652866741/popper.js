{"version":3,"file":null,"sources":["../src/popper/utils/isFunction.js","../src/tooltip/index.js"],"sourcesContent":["/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n    const getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n","import Popper from 'popper.js';\nimport isFunction from '../popper/utils/isFunction';\n\nconst DEFAULT_OPTIONS = {\n    container: false,\n    delay: 0,\n    html: false,\n    placement: 'top',\n    title: '',\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    offset: 0,\n};\n\nexport default class Tooltip {\n    /**\n     * Create a new Tooltip.js instance\n     * @class Tooltip\n     * @param {HTMLElement} reference - The reference element used to position the tooltip\n     * @param {Object} options\n     * @param {String} options.placement=bottom\n     *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -right),\n     *      left(-start, -end)`\n     *\n     * @param {HTMLElement} reference - The DOM node used as reference of the tooltip (it can be a jQuery element).\n     * @param {Object} options - Configuration of the tooltip\n     * @param {HTMLElement|String|false} options.container=false - Append the tooltip to a specific element.\n     * @param {Number|Object} options.delay=0\n     *      Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type.\n     *      If a number is supplied, delay is applied to both hide/show.\n     *      Object structure is: `{ show: 500, hide: 100 }`\n     * @param {Boolean} options.html=false - Insert HTML into the tooltip. If false, the content will inserted with `innerText`.\n     * @param {String|PlacementFunction} options.placement='top' - One of the allowed placements, or a function returning one of them.\n     * @param {String} options.template='<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n     *      Base HTML to used when creating the tooltip.\n     *      The tooltip's `title` will be injected into the `.tooltip-inner` or `.tooltip__inner`.\n     *      `.tooltip-arrow` or `.tooltip__arrow` will become the tooltip's arrow.\n     *      The outermost wrapper element should have the `.tooltip` class.\n     * @param {String|HTMLElement|TitleFunction} options.title='' - Default title value if `title` attribute isn't present.\n     * @param {String} options.trigger='hover focus'\n     *      How tooltip is triggered - click | hover | focus | manual.\n     *      You may pass multiple triggers; separate them with a space. `manual` cannot be combined with any other trigger.\n     * @param {HTMLElement} options.boundariesElement\n     *      The element used as boundaries for the tooltip. For more information refer to Popper.js'\n     *      [boundariesElement docs](https://popper.js.org/popper-documentation.html)\n     * @param {Number|String} options.offset=0 - Offset of the tooltip relative to its reference. For more information refer to Popper.js'\n     *      [offset docs](https://popper.js.org/popper-documentation.html)\n     * @return {Object} instance - The generated tooltip instance\n     */\n    constructor(reference, options) {\n        // apply user options over default ones\n        options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n        reference.jquery && (reference = reference[0]);\n\n        // cache reference and options\n        this.reference = reference;\n        this.options = options;\n\n        // get events list\n        const events = typeof options.trigger === 'string' ? options.trigger.split(' ').filter((trigger) => {\n            return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;\n        }) : [];\n\n        // set initial state\n        this._isOpen = false;\n\n        // set event listeners\n        this._setEventListeners(reference, events, options);\n    }\n\n    //\n    // Public methods\n    //\n\n    /**\n     * Reveals an element's tooltip. This is considered a \"manual\" triggering of the tooltip.\n     * Tooltips with zero-length titles are never displayed.\n     * @memberof Tooltip\n     */\n    show = () => this._show(this.reference, this.options);\n\n    /**\n     * Hides an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * @memberof Tooltip\n     */\n    hide = () => this._hide();\n\n    /**\n     * Hides and destroys an element’s tooltip.\n     * @memberof Tooltip\n     */\n    dispose = () => this._dispose();\n\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * @memberof Tooltip\n     */\n    toggle = () => {\n        if (this._isOpen) {\n            return this.hide();\n        } else {\n            return this.show();\n        }\n    }\n\n    //\n    // Defaults\n    //\n    arrowSelector = '.tooltip-arrow, .tooltip__arrow';\n    innerSelector = '.tooltip-inner, .tooltip__inner';\n\n    //\n    // Private methods\n    //\n\n    _events = [];\n\n    /**\n     * Creates a new tooltip node\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} reference\n     * @param {String} template\n     * @param {String|HTMLElement|TitleFunction} title\n     * @param {Boolean} allowHtml\n     * @return {HTMLelement} tooltipNode\n     */\n    _create(reference, template, title, allowHtml) {\n        // create tooltip element\n        const tooltipGenerator = window.document.createElement('div');\n        tooltipGenerator.innerHTML = template;\n        const tooltipNode = tooltipGenerator.childNodes[0];\n\n        // add title to tooltip\n        const titleNode = tooltipGenerator.querySelector(this.innerSelector);\n        if (title.nodeType === 1) {\n            // if title is a node, append it only if allowHtml is true\n            allowHtml && titleNode.appendChild(title);\n        }\n        else if (isFunction(title)) {\n            // if title is a function, call it and set innerText or innerHtml depending by `allowHtml` value\n            const titleText = title.call(reference);\n            allowHtml ? (titleNode.innerHTML = titleText) : (titleNode.innerText = titleText);\n        }\n        else {\n            // if it's just a simple text, set innerText or innerHtml depending by `allowHtml` value\n            allowHtml ? (titleNode.innerHTML = title) : (titleNode.innerText = title);\n        }\n\n        // return the generated tooltip node\n        return tooltipNode;\n    }\n\n    _show(reference, options) {\n        // don't show if it's already visible\n        if (this._isOpen) { return this; }\n        this._isOpen = true;\n\n        // if the tooltipNode already exists, just show it\n        if (this._tooltipNode) {\n            this._tooltipNode.style.display = '';\n            this.popperInstance.update();\n            return this;\n        }\n\n        // get title\n        const title = reference.getAttribute('title') || options.title;\n\n        // don't show tooltip if no title is defined\n        if (!title) { return this; }\n\n        // create tooltip node\n        const tooltipNode = this._create(reference, options.template, title, options.html);\n\n        // append tooltip to container: container = false we pick the parent node of the reference\n        var container = options.container === false ? reference.parentNode : options.container;\n\n        this._append(tooltipNode, container);\n\n        const popperOptions = {\n            placement: options.placement,\n            arrowElement: this.arrowSelector,\n        };\n\n        if (options.boundariesElement) {\n            popperOptions.boundariesElement = options.boundariesElement;\n        }\n\n        this.popperInstance = new Popper(reference, tooltipNode, popperOptions);\n\n        this._tooltipNode = tooltipNode;\n\n        return this;\n    }\n\n\n    _hide(/*reference, options*/) {\n        // don't hide if it's already hidden\n        if (!this._isOpen) { return this; }\n\n        this._isOpen = false;\n\n        // hide tooltipNode\n        this._tooltipNode.style.display = 'none';\n\n        return this;\n    }\n\n    _dispose() {\n        if (this._tooltipNode) {\n            this._hide();\n\n            // destroy instance\n            this.popperInstance.destroy();\n\n            // remove event listeners\n            this._events.forEach(({func, event }) => {\n                this._tooltipNode.removeEventListener(event, func);\n            });\n            this._events = [];\n\n            // destroy tooltipNode\n            this._tooltipNode.parentNode.removeChild(this._tooltipNode);\n            this._tooltipNode = null;\n        }\n        return this;\n    }\n\n    _findContainer(container) {\n        // if container is a query, get the relative element\n        if (typeof container === 'string') {\n            container = window.document.querySelector(container);\n        }\n        // if container is `false`, set it to body\n        else if (container === false) {\n            container = window.document.body;\n        }\n        return container;\n    }\n\n    /**\n     * Append tooltip to container\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} tooltip\n     * @param {HTMLElement|String|false} container\n     */\n    _append(tooltipNode, container) {\n        container.appendChild(tooltipNode);\n    }\n\n    _setEventListeners(reference, events, options) {\n        const directEvents = events.map((event) => {\n            switch(event) {\n                case 'hover':\n                    return 'mouseenter';\n                case 'focus':\n                    return 'focus';\n                case 'click':\n                    return 'click';\n                default:\n                    return;\n            }\n        });\n\n        const oppositeEvents = events.map((event) => {\n            switch(event) {\n                case 'hover':\n                    return 'mouseleave';\n                case 'focus':\n                    return 'blur';\n                case 'click':\n                    return 'click';\n                default:\n                    return;\n            }\n        }).filter(event => !!event);\n\n        // schedule show tooltip\n        directEvents.forEach((event) => {\n            const func = (evt)  => {\n                if (this._isOpen === true) { return; }\n                evt.usedByTooltip = true;\n                this._scheduleShow(reference, options.delay, options, evt);\n            };\n            this._events.push({ event, func });\n            reference.addEventListener(event, func);\n        });\n\n        // schedule hide tooltip\n        oppositeEvents.forEach((event) => {\n            const func = (evt) => {\n                if (evt.usedByTooltip === true) { return; }\n                this._scheduleHide(reference, options.delay, options, evt);\n            };\n            this._events.push({ event, func });\n            reference.addEventListener(event, func);\n        });\n    }\n\n    _scheduleShow(reference, delay, options/*, evt */) {\n        // defaults to 0\n        const computedDelay = (delay && delay.show) || delay || 0;\n        window.setTimeout(() => this._show(reference, options), computedDelay);\n    }\n\n    _scheduleHide(reference, delay, options, evt) {\n        // defaults to 0\n        const computedDelay = (delay && delay.hide) || delay || 0;\n        window.setTimeout(() => {\n            if (this._isOpen === false) { return; }\n            if (!document.body.contains(this._tooltipNode)) { return; }\n\n            // if we are hiding because of a mouseleave, we must check that the new\n            // reference isn't the tooltip, because in this case we don't want to hide it\n            if (evt.type === 'mouseleave') {\n                const isSet = this._setTooltipNodeEvent(evt, reference, delay, options);\n\n                // if we set the new event, don't hide the tooltip yet\n                // the new event will take care to hide it if necessary\n                if (isSet) { return; }\n            }\n\n            this._hide(reference, options);\n        }, computedDelay);\n    }\n\n    _setTooltipNodeEvent = (evt, reference, delay, options) => {\n        const relatedreference = evt.relatedreference || evt.toElement;\n\n        const callback = (evt2) => {\n            const relatedreference2 = evt2.relatedreference || evt2.toElement;\n\n            // Remove event listener after call\n            this._tooltipNode.removeEventListener(evt.type, callback);\n\n            // If the new reference is not the reference element\n            if (!this._isElOrChildOfEl(relatedreference2, reference)) {\n\n                // Schedule to hide tooltip\n                this._scheduleHide(reference, options.delay, options, evt2);\n            }\n        };\n\n        if (this._isElOrChildOfEl(relatedreference, this._tooltipNode)) {\n            // listen to mouseleave on the tooltip element to be able to hide the tooltip\n            this._tooltipNode.addEventListener(evt.type, callback);\n            return true;\n        }\n\n        return false;\n    }\n\n    _isElOrChildOfEl(a, b) {\n        return a === b || b.contains(a);\n    }\n}\n\n\n/**\n * Placement function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback PlacementFunction\n * @param {HTMLElement} tooltip - tooltip DOM node.\n * @param {HTMLElement} reference - reference DOM node.\n * @return {String} placement - One of the allowed placement options.\n */\n\n/**\n * Title function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback TitleFunction\n * @return {String} placement - The desired title.\n */\n"],"names":["functionToCheck","toString","call","container","delay","html","placement","title","template","trigger","offset","reference","options","Object","assign","DEFAULT_OPTIONS","jquery","split","filter","indexOf","_isOpen","_setEventListeners","events","allowHtml","window","document","createElement","tooltipGenerator","innerHTML","childNodes","titleNode","querySelector","innerSelector","nodeType","appendChild","isFunction","titleText","innerText","_tooltipNode","style","display","popperInstance","update","getAttribute","_create","parentNode","_append","tooltipNode","arrowElement","arrowSelector","boundariesElement","popperOptions","_hide","destroy","_events","forEach","func","event","removeEventListener","removeChild","body","directEvents","map","oppositeEvents","evt","usedByTooltip","_scheduleShow","push","addEventListener","_scheduleHide","computedDelay","show","setTimeout","_show","hide","contains","type","_setTooltipNodeEvent","isSet","a","b","dispose","_dispose","toggle","relatedreference","toElement","callback","evt2","_isElOrChildOfEl","relatedreference2"],"mappings":"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"}